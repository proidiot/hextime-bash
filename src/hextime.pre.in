#!@BASH@

#
# hextime-bash @PACKAGE_VERSION@ - An implementation of hextime in bash
# Copyright (C) 2015  Charles Southerland <charlie@stuphlabs.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

set -e

AWK_CMD="@AWK@"
DATE_CMD="@DATE@"
DC_CMD="@DC@"
WGET_CMD="@WGET@"
STAT_CMD="@STAT@"
DATAPATH="@PKGDATADIR@"

MAXHEXTIME="F0C2AB7C54FE03"
MINHEXTIME="-F0C2AC83AAA5D4"

LEAP_SECONDS_URL="https://www.ietf.org/timezones/data/leap-seconds.list"

UNIX_LEAP_SECONDS_FILE="$DATAPATH/unix-leap-seconds.list"
OLD_OFFSET=$((365 * 24 * 60 * 60))

USAGE_MSG="Usage:\thextime [DATESTRING]\n\thextime -d HEXTIME\n\thextime --update\n\thextime --help\n\thextime --version"
EXPLANATION_MSG="hextime is a hexadecimal representation of the actual number of seconds which\nhave passed since the Unix epoch (exactly midnight of 1 January 1970 UTC).\nUnlike some other measures of time, hextime does not include leap seconds;\nhextime is intended to be a linear measure of real time."
OUT_OF_DATE_MSG="hextime: The time offset database may be out of date.\nPlease run \"hextime --update\" fix the problem."
OVERFLOW_MSG="hextime: Due to limitations of the $DATE_CMD command, only hextimes between $MINHEXTIME and $MAXHEXTIME can be interpereted."
COPYRIGHT_MSG="hextime-bash @PACKAGE_VERSION@  Copyright (C) 2015  Charles Southerland"
LICENSE_MSG="This program is released under the terms of the GNU GPL v3 or later.\nThis program comes with ABSOLUTELY NO WARRANTY.\nThis is free software, and you are welcome to redistribute it under\ncertain conditions.See https://www.gnu.org/licenses/ for details."
BUG_REPORT_MSG="Please report bugs at <https://github.com/proidiot/hextime-bash/issues>."

if [ "$1" == "--version" ]
then
	echo -e $COPYRIGHT_MSG
	echo ""
	echo -e $LICENSE_MSG
	exit 0
fi

if [[ "$1" == "-h" || "$1" == "--help" ]]
then
	echo -e $USAGE_MSG
	echo -e "\n"
	echo -e $EXPLANATION_MSG
	echo -e "\n"
	echo -e $COPYRIGHT_MSG
	echo ""
	echo -e $BUG_REPORT_MSG
	echo ""
	echo -e $LICENSE_MSG
	exit 0
fi

if [ "$1" == "--update" ]
then
	$WGET_CMD -O - $LEAP_SECONDS_URL | $AWK_CMD '$1~/^[^#].+$/{print $1-2208988800"\t"$2}' > $UNIX_LEAP_SECONDS_FILE
	exit 0
fi

LAST_MODIFIED=$($STAT_CMD -c %Y $UNIX_LEAP_SECONDS_FILE)
OLD_TIME+=$(($($DATE_CMD +%s) - $OLD_OFFSET))

if [ $LAST_MODIFIED -lt $OLD_TIME ]
then
	echo -e $OUT_OF_DATE_MSG >&2
fi

if [ "$1" == "-d" ]
then
	if [ "$#" != "2" ]
	then
		echo -e $USAGE_MSG >&2
		exit 1
	fi

	if [ "x${2:0:1}" == "x-" ]
	then
		RAWTIME="${2:1}"
		POLARITY="-"
	else
		RAWTIME="$2"
		POLARITY="+"
	fi

	RAWTIME="$(echo $RAWTIME | tr '[a-f]' '[A-F]')"

	if $(echo $RAWTIME | grep -q '[^0-9A-F]')
	then
		echo -e $USAGE_MSG >&2
		exit 1
	fi

	DECTIME=$(echo "10 o 16 i 0 $RAWTIME $POLARITY p" | $DC_CMD)

	if $(expr $(echo "10 o 16 i $MAXHEXTIME p" | $DC_CMD) "<" $DECTIME > /dev/null)
	then
		echo -e $OVERFLOW_MSG >&2
		exit 1
	fi
	if $(expr $(echo -e "10 o 16 i 0 ${MINHEXTIME:1} - p" | $DC_CMD) ">" $DECTIME > /dev/null)
	then
		echo -e $OVERFLOW_MSG >&2
		exit 1
	fi

	OFFSET=$(cat $UNIX_LEAP_SECONDS_FILE | $AWK_CMD '{old=0;offset=0;do{if($1>old&&('$DECTIME'-$2)>=$1){old=$1;offset=$2}}while(getline);print offset;}')

	UNIXTIME=$(($DECTIME - $OFFSET))

	$DATE_CMD -d "00:00:00 jan 1 1970 utc +"$UNIXTIME" seconds"

	exit 0
fi

if [ "$#" == "0" ]
then
	DATESPEC="now"
else
	DATESPEC="$@"
fi

UNIXTIME=$($DATE_CMD -d "$DATESPEC" +%s)

OFFSET=$(cat $UNIX_LEAP_SECONDS_FILE | $AWK_CMD '{old=0;offset=0;do{if($1>old&&('$UNIXTIME')>=$1){old=$1;offset=$2;}}while(getline);print offset;}')

if [ "x${UNIXTIME:0:1}" == "x-" ]
then
	RAWTIME="${UNIXTIME:1}"
	POLARITY="-"
else
	RAWTIME="$UNIXTIME"
	POLARITY="+"
fi

echo "10 i 16 o 0 $RAWTIME $POLARITY $OFFSET + p" | $DC_CMD

